Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_divmodqi4.o)
                              lab4.o (__divmodqi4)
/usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_divmodhi4.o)
                              hd44780.o (__divmodhi4)
/usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_divmodsi4.o)
                              hd44780.o (__divmodsi4)
/usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_negsi2.o)
                              /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_divmodsi4.o) (__negsi2)
/usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr51/crtatmega128.o (exit)
/usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_copy_data.o)
                              lab4.o (__do_copy_data)
/usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_clear_bss.o)
                              lab4.o (__do_clear_bss)
/usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_udivmodqi4.o)
                              /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_divmodqi4.o) (__udivmodqi4)
/usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_udivmodhi4.o)
                              /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_divmodhi4.o) (__udivmodhi4)
/usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_udivmodsi4.o)
                              /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_divmodsi4.o) (__udivmodsi4)

Allocating common symbols
Common symbol       size              file

lcd_string_array    0x20              hd44780.o
lcd_str             0x10              hd44780.o
segment_data        0x5               lab4.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800100 0x000000000000ff00 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000003 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr51/crtatmega128.o
LOAD lab4.o
LOAD hd44780.o
START GROUP
LOAD /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a
LOAD /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr51/libm.a
LOAD /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr51/libc.a
LOAD /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr51/libatmega128.a
END GROUP
                0x0000000000020000                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x20000
                0x000000000000ff00                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xff00
                0x0000000000010000                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                [0x0000000000000003]                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x0000000000000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x0000000000000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x0000000000000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000     0x1230
 *(.vectors)
 .vectors       0x0000000000000000       0x8c /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr51/crtatmega128.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x000000000000008c                . = ALIGN (0x2)
                0x000000000000008c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000000000008c        0x0 linker stubs
 *(.trampolines*)
                0x000000000000008c                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem.*)
                0x000000000000008c                . = ALIGN (0x2)
 *(.lowtext)
 *(.lowtext*)
                0x000000000000008c                __ctors_start = .
 *(.ctors)
                0x000000000000008c                __ctors_end = .
                0x000000000000008c                __dtors_start = .
 *(.dtors)
                0x000000000000008c                __dtors_end = .
 SORT_BY_NAME(*)(.ctors)
 SORT_BY_NAME(*)(.dtors)
 *(.init0)
 .init0         0x000000000000008c        0x0 /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr51/crtatmega128.o
                0x000000000000008c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000000000008c        0xc /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr51/crtatmega128.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000098       0x1a /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_copy_data.o)
                0x0000000000000098                __do_copy_data
 .init4         0x00000000000000b2       0x10 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_clear_bss.o)
                0x00000000000000b2                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000000c2        0x8 /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr51/crtatmega128.o
 *(.init9)
 *(.text)
 .text          0x00000000000000ca        0x4 /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr51/crtatmega128.o
                0x00000000000000ca                __vector_22
                0x00000000000000ca                __vector_28
                0x00000000000000ca                __vector_1
                0x00000000000000ca                __vector_32
                0x00000000000000ca                __vector_34
                0x00000000000000ca                __vector_24
                0x00000000000000ca                __vector_12
                0x00000000000000ca                __bad_interrupt
                0x00000000000000ca                __vector_6
                0x00000000000000ca                __vector_31
                0x00000000000000ca                __vector_3
                0x00000000000000ca                __vector_23
                0x00000000000000ca                __vector_30
                0x00000000000000ca                __vector_25
                0x00000000000000ca                __vector_11
                0x00000000000000ca                __vector_13
                0x00000000000000ca                __vector_17
                0x00000000000000ca                __vector_19
                0x00000000000000ca                __vector_7
                0x00000000000000ca                __vector_27
                0x00000000000000ca                __vector_5
                0x00000000000000ca                __vector_33
                0x00000000000000ca                __vector_4
                0x00000000000000ca                __vector_9
                0x00000000000000ca                __vector_2
                0x00000000000000ca                __vector_15
                0x00000000000000ca                __vector_29
                0x00000000000000ca                __vector_8
                0x00000000000000ca                __vector_26
                0x00000000000000ca                __vector_10
                0x00000000000000ca                __vector_18
                0x00000000000000ca                __vector_20
 .text          0x00000000000000ce      0x57c lab4.o
                0x00000000000000ce                timer0_init
                0x00000000000000e2                timer1_init
                0x00000000000000fa                timer2_init
                0x0000000000000102                timer3_init
                0x0000000000000128                spi_init
                0x0000000000000136                adc_init
                0x0000000000000144                debounce_switch
                0x0000000000000188                dec_to_bcd
                0x00000000000001d0                blink_colon
                0x00000000000001e8                display_sum
                0x000000000000025a                segsum
                0x00000000000002b4                spi_action
                0x00000000000002da                encoder_adjuster
                0x0000000000000390                alarm_set
                0x0000000000000392                mode_select
                0x0000000000000430                clock_set
                0x0000000000000446                __vector_16
                0x00000000000004f8                __vector_14
                0x0000000000000534                __vector_21
                0x0000000000000560                vol_adjust
                0x000000000000057e                mode_action
 .text          0x000000000000064a      0x994 hd44780.o
                0x000000000000064a                send_lcd
                0x0000000000000674                refresh_lcd
                0x0000000000000726                set_custom_character
                0x0000000000000792                set_cursor
                0x00000000000007c2                uint2lcd
                0x000000000000089a                int2lcd
                0x00000000000008d4                cursor_on
                0x00000000000008f8                cursor_off
                0x000000000000091c                shift_right
                0x0000000000000940                shift_left
                0x0000000000000964                strobe_lcd
                0x0000000000000976                clear_display
                0x00000000000009a6                cursor_home
                0x00000000000009d6                line2_col1
                0x0000000000000a02                line1_col1
                0x0000000000000a2e                fill_spaces
                0x0000000000000a62                char2lcd
                0x0000000000000a86                string2lcd
                0x0000000000000ae0                lcd_init
                0x0000000000000c64                lcd_int32
                0x0000000000000e1c                lcd_int16
 .text          0x0000000000000fde        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_divmodqi4.o)
 .text          0x0000000000000fde        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_divmodhi4.o)
 .text          0x0000000000000fde        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_divmodsi4.o)
 .text          0x0000000000000fde        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_negsi2.o)
 .text          0x0000000000000fde        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_exit.o)
 .text          0x0000000000000fde        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_copy_data.o)
 .text          0x0000000000000fde        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_clear_bss.o)
 .text          0x0000000000000fde        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_udivmodqi4.o)
 .text          0x0000000000000fde        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_udivmodhi4.o)
 .text          0x0000000000000fde        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_udivmodsi4.o)
                0x0000000000000fde                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000000fde      0x148 lab4.o
                0x0000000000000fde                main
 .text.libgcc.mul
                0x0000000000001126        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_divmodqi4.o)
 .text.libgcc.div
                0x0000000000001126       0x1c /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_divmodqi4.o)
                0x0000000000001126                __divmodqi4
 .text.libgcc   0x0000000000001142        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_divmodqi4.o)
 .text.libgcc.prologue
                0x0000000000001142        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_divmodqi4.o)
 .text.libgcc.builtins
                0x0000000000001142        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_divmodqi4.o)
 .text.libgcc.fmul
                0x0000000000001142        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_divmodqi4.o)
 .text.libgcc.fixed
                0x0000000000001142        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_divmodqi4.o)
 .text.libgcc.mul
                0x0000000000001142        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.div
                0x0000000000001142       0x28 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_divmodhi4.o)
                0x0000000000001142                __divmodhi4
                0x0000000000001142                _div
 .text.libgcc   0x000000000000116a        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.prologue
                0x000000000000116a        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.builtins
                0x000000000000116a        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.fmul
                0x000000000000116a        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.fixed
                0x000000000000116a        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.mul
                0x000000000000116a        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.div
                0x000000000000116a       0x2e /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_divmodsi4.o)
                0x000000000000116a                __divmodsi4
 .text.libgcc   0x0000000000001198        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.prologue
                0x0000000000001198        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.builtins
                0x0000000000001198        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.fmul
                0x0000000000001198        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.fixed
                0x0000000000001198        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.mul
                0x0000000000001198        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.div
                0x0000000000001198       0x10 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_negsi2.o)
                0x0000000000001198                __negsi2
 .text.libgcc   0x00000000000011a8        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.prologue
                0x00000000000011a8        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.builtins
                0x00000000000011a8        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.fmul
                0x00000000000011a8        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.fixed
                0x00000000000011a8        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.mul
                0x00000000000011a8        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000011a8        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000011a8        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000011a8        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000011a8        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000011a8        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000011a8        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000011a8        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000000011a8        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000011a8        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000000011a8        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000000011a8        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000000011a8        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000000011a8        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000000011a8        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000000011a8        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000000011a8        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000000011a8        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000000011a8        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000000011a8        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000000011a8        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x00000000000011a8        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_udivmodqi4.o)
 .text.libgcc.div
                0x00000000000011a8       0x18 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_udivmodqi4.o)
                0x00000000000011a8                __udivmodqi4
 .text.libgcc   0x00000000000011c0        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_udivmodqi4.o)
 .text.libgcc.prologue
                0x00000000000011c0        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_udivmodqi4.o)
 .text.libgcc.builtins
                0x00000000000011c0        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_udivmodqi4.o)
 .text.libgcc.fmul
                0x00000000000011c0        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_udivmodqi4.o)
 .text.libgcc.fixed
                0x00000000000011c0        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_udivmodqi4.o)
 .text.libgcc.mul
                0x00000000000011c0        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x00000000000011c0       0x28 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_udivmodhi4.o)
                0x00000000000011c0                __udivmodhi4
 .text.libgcc   0x00000000000011e8        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x00000000000011e8        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x00000000000011e8        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x00000000000011e8        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fixed
                0x00000000000011e8        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.mul
                0x00000000000011e8        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.div
                0x00000000000011e8       0x44 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_udivmodsi4.o)
                0x00000000000011e8                __udivmodsi4
 .text.libgcc   0x000000000000122c        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.prologue
                0x000000000000122c        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.builtins
                0x000000000000122c        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fmul
                0x000000000000122c        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fixed
                0x000000000000122c        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_udivmodsi4.o)
                0x000000000000122c                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000000000000122c        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_exit.o)
                0x000000000000122c                exit
                0x000000000000122c                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000000000000122c        0x4 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_exit.o)
 *(.fini0)
 *(.hightext)
 *(.hightext*)
 *(.progmemx.*)
                0x0000000000001230                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
                0x0000000000001230                _etext = .

.data           0x0000000000800100       0x46 load address 0x0000000000001230
                0x0000000000800100                PROVIDE (__data_start = .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr51/crtatmega128.o
 .data          0x0000000000800100        0x7 lab4.o
 .data          0x0000000000800107        0x0 hd44780.o
 .data          0x0000000000800107        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_divmodqi4.o)
 .data          0x0000000000800107        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_divmodhi4.o)
 .data          0x0000000000800107        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_divmodsi4.o)
 .data          0x0000000000800107        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_negsi2.o)
 .data          0x0000000000800107        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_exit.o)
 .data          0x0000000000800107        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_copy_data.o)
 .data          0x0000000000800107        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_clear_bss.o)
 .data          0x0000000000800107        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_udivmodqi4.o)
 .data          0x0000000000800107        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_udivmodhi4.o)
 .data          0x0000000000800107        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_udivmodsi4.o)
 *(.data*)
 *(.gnu.linkonce.d*)
 *(.rodata)
 .rodata        0x0000000000800107        0xc lab4.o
 *(.rodata*)
 .rodata.str1.1
                0x0000000000800113       0x32 lab4.o
 *(.gnu.linkonce.r*)
                0x0000000000800146                . = ALIGN (0x2)
 *fill*         0x0000000000800145        0x1 
                0x0000000000800146                _edata = .
                0x0000000000800146                PROVIDE (__data_end = .)

.bss            0x0000000000800146       0x47
                0x0000000000800146                PROVIDE (__bss_start = .)
 *(.bss)
 .bss           0x0000000000800146        0x0 /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr51/crtatmega128.o
 .bss           0x0000000000800146       0x11 lab4.o
 .bss           0x0000000000800157        0x1 hd44780.o
 .bss           0x0000000000800158        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_divmodqi4.o)
 .bss           0x0000000000800158        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_divmodhi4.o)
 .bss           0x0000000000800158        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_divmodsi4.o)
 .bss           0x0000000000800158        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_negsi2.o)
 .bss           0x0000000000800158        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_exit.o)
 .bss           0x0000000000800158        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_copy_data.o)
 .bss           0x0000000000800158        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800158        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_udivmodqi4.o)
 .bss           0x0000000000800158        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_udivmodhi4.o)
 .bss           0x0000000000800158        0x0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_udivmodsi4.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800158        0x5 lab4.o
                0x0000000000800158                segment_data
 COMMON         0x000000000080015d       0x30 hd44780.o
                0x000000000080015d                lcd_string_array
                0x000000000080017d                lcd_str
                0x000000000080018d                PROVIDE (__bss_end = .)
                0x0000000000001230                __data_load_start = LOADADDR (.data)
                0x0000000000001276                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080018d        0x0
                [!provide]                        PROVIDE (__noinit_start = .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end = .)
                0x000000000080018d                _end = .
                [!provide]                        PROVIDE (__heap_start = .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000     0x3bc4
 *(.stab)
 .stab          0x0000000000000000     0x1788 lab4.o
 .stab          0x0000000000001788     0x19ec hd44780.o
                                       0x1bb4 (size before relaxing)
 .stab          0x0000000000003174       0xf0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_divmodqi4.o)
                                         0xfc (size before relaxing)
 .stab          0x0000000000003264      0x138 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_divmodhi4.o)
                                        0x144 (size before relaxing)
 .stab          0x000000000000339c      0x144 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_divmodsi4.o)
                                        0x150 (size before relaxing)
 .stab          0x00000000000034e0       0x6c /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_negsi2.o)
                                         0x78 (size before relaxing)
 .stab          0x000000000000354c       0x6c /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_exit.o)
                                         0x78 (size before relaxing)
 .stab          0x00000000000035b8       0xf0 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_copy_data.o)
                                         0xfc (size before relaxing)
 .stab          0x00000000000036a8       0xb4 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_clear_bss.o)
                                         0xc0 (size before relaxing)
 .stab          0x000000000000375c       0xe4 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_udivmodqi4.o)
                                         0xf0 (size before relaxing)
 .stab          0x0000000000003840      0x15c /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_udivmodhi4.o)
                                        0x168 (size before relaxing)
 .stab          0x000000000000399c      0x228 /usr/lib/gcc/avr/7.2.0/avr51/libgcc.a(_udivmodsi4.o)
                                        0x234 (size before relaxing)

.stabstr        0x0000000000000000     0x1793
 *(.stabstr)
 .stabstr       0x0000000000000000     0x1793 lab4.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x21
 *(.comment)
 .comment       0x0000000000000000       0x21 lab4.o
                                         0x22 (size before relaxing)
 .comment       0x0000000000000021       0x22 hd44780.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr51/crtatmega128.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x780
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x780 /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr51/crtatmega128.o

.debug_abbrev   0x0000000000000000      0x718
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x718 /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr51/crtatmega128.o

.debug_line     0x0000000000000000       0x1d
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1d /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr51/crtatmega128.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000      0x27d
 *(.debug_str)
 .debug_str     0x0000000000000000      0x27d /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr51/crtatmega128.o

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)
OUTPUT(lab4.elf elf32-avr)
LOAD linker stubs
