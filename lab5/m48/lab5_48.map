Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/7.2.0/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr4/crtatmega48.o (exit)
/usr/lib/gcc/avr/7.2.0/avr4/libgcc.a(_clear_bss.o)
                              lab5_48.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

uart_tx_buf         0x28              lab5_48.o
twi_state           0x1               twi_master.o
twi_buf             0x2               twi_master.o
lm73_wr_buf         0x2               lm73_functions.o
UDR_read            0x2               lab5_48.o
twi_bus_addr        0x1               twi_master.o
twi_msg_size        0x1               twi_master.o
lm73_rd_buf         0x2               lm73_functions.o
uart_rx_buf         0x28              lab5_48.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000003 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr4/crtatmega48.o
LOAD lab5_48.o
LOAD uart_functions_m48.o
LOAD twi_master.o
LOAD lm73_functions.o
START GROUP
LOAD /usr/lib/gcc/avr/7.2.0/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr4/libm.a
LOAD /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr4/libc.a
LOAD /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr4/libatmega48.a
END GROUP
                0x0000000000002000                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x2000
                0x000000000000ffa0                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xffa0
                0x0000000000010000                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                [0x0000000000000003]                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x0000000000000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x0000000000000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x0000000000000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x422
 *(.vectors)
 .vectors       0x0000000000000000       0x34 /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr4/crtatmega48.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000034                . = ALIGN (0x2)
                0x0000000000000034                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000034        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000034                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem.*)
                0x0000000000000034                . = ALIGN (0x2)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000034                __ctors_start = .
 *(.ctors)
                0x0000000000000034                __ctors_end = .
                0x0000000000000034                __dtors_start = .
 *(.dtors)
                0x0000000000000034                __dtors_end = .
 SORT_BY_NAME(*)(.ctors)
 SORT_BY_NAME(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000034        0x0 /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr4/crtatmega48.o
                0x0000000000000034                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000034        0xc /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr4/crtatmega48.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000040       0x10 /usr/lib/gcc/avr/7.2.0/avr4/libgcc.a(_clear_bss.o)
                0x0000000000000040                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000050        0x4 /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr4/crtatmega48.o
 *(.init9)
 *(.text)
 .text          0x0000000000000054        0x2 /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr4/crtatmega48.o
                0x0000000000000054                __vector_22
                0x0000000000000054                __vector_1
                0x0000000000000054                __vector_12
                0x0000000000000054                __bad_interrupt
                0x0000000000000054                __vector_6
                0x0000000000000054                __vector_3
                0x0000000000000054                __vector_23
                0x0000000000000054                __vector_25
                0x0000000000000054                __vector_11
                0x0000000000000054                __vector_13
                0x0000000000000054                __vector_17
                0x0000000000000054                __vector_19
                0x0000000000000054                __vector_7
                0x0000000000000054                __vector_5
                0x0000000000000054                __vector_4
                0x0000000000000054                __vector_9
                0x0000000000000054                __vector_2
                0x0000000000000054                __vector_21
                0x0000000000000054                __vector_15
                0x0000000000000054                __vector_8
                0x0000000000000054                __vector_14
                0x0000000000000054                __vector_10
                0x0000000000000054                __vector_16
                0x0000000000000054                __vector_20
 .text          0x0000000000000056       0xf2 lab5_48.o
                0x0000000000000056                lm73_read
                0x00000000000000de                __vector_18
 .text          0x0000000000000148       0xac uart_functions_m48.o
                0x0000000000000148                uart_putc
                0x000000000000015e                uart_puts
                0x0000000000000184                uart_puts_p
                0x00000000000001b8                uart_init
                0x00000000000001d8                uart_getc
 .text          0x00000000000001f4      0x204 twi_master.o
                0x00000000000001f4                __vector_24
                0x000000000000039a                twi_busy
                0x00000000000003a2                twi_start_wr
                0x00000000000003c4                twi_start_rd
                0x00000000000003e6                init_twi
 .text          0x00000000000003f8        0x0 lm73_functions.o
 .text          0x00000000000003f8        0x0 /usr/lib/gcc/avr/7.2.0/avr4/libgcc.a(_exit.o)
 .text          0x00000000000003f8        0x0 /usr/lib/gcc/avr/7.2.0/avr4/libgcc.a(_clear_bss.o)
                0x00000000000003f8                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x00000000000003f8       0x26 lab5_48.o
                0x00000000000003f8                main
 .text.libgcc.mul
                0x000000000000041e        0x0 /usr/lib/gcc/avr/7.2.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.div
                0x000000000000041e        0x0 /usr/lib/gcc/avr/7.2.0/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x000000000000041e        0x0 /usr/lib/gcc/avr/7.2.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x000000000000041e        0x0 /usr/lib/gcc/avr/7.2.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x000000000000041e        0x0 /usr/lib/gcc/avr/7.2.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x000000000000041e        0x0 /usr/lib/gcc/avr/7.2.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x000000000000041e        0x0 /usr/lib/gcc/avr/7.2.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x000000000000041e        0x0 /usr/lib/gcc/avr/7.2.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x000000000000041e        0x0 /usr/lib/gcc/avr/7.2.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc   0x000000000000041e        0x0 /usr/lib/gcc/avr/7.2.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x000000000000041e        0x0 /usr/lib/gcc/avr/7.2.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x000000000000041e        0x0 /usr/lib/gcc/avr/7.2.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x000000000000041e        0x0 /usr/lib/gcc/avr/7.2.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x000000000000041e        0x0 /usr/lib/gcc/avr/7.2.0/avr4/libgcc.a(_clear_bss.o)
                0x000000000000041e                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000000000000041e        0x0 /usr/lib/gcc/avr/7.2.0/avr4/libgcc.a(_exit.o)
                0x000000000000041e                exit
                0x000000000000041e                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000000000000041e        0x4 /usr/lib/gcc/avr/7.2.0/avr4/libgcc.a(_exit.o)
 *(.fini0)
 *(.hightext)
 *(.hightext*)
 *(.progmemx.*)
                0x0000000000000422                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
                0x0000000000000422                _etext = .

.data           0x0000000000800100        0x0 load address 0x0000000000000422
                [!provide]                        PROVIDE (__data_start = .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr4/crtatmega48.o
 .data          0x0000000000800100        0x0 lab5_48.o
 .data          0x0000000000800100        0x0 uart_functions_m48.o
 .data          0x0000000000800100        0x0 twi_master.o
 .data          0x0000000000800100        0x0 lm73_functions.o
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/7.2.0/avr4/libgcc.a(_exit.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/7.2.0/avr4/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.gnu.linkonce.d*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.r*)
                0x0000000000800100                . = ALIGN (0x2)
                0x0000000000800100                _edata = .
                [!provide]                        PROVIDE (__data_end = .)

.bss            0x0000000000800100       0x5e
                0x0000000000800100                PROVIDE (__bss_start = .)
 *(.bss)
 .bss           0x0000000000800100        0x0 /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr4/crtatmega48.o
 .bss           0x0000000000800100        0x2 lab5_48.o
 .bss           0x0000000000800102        0x0 uart_functions_m48.o
 .bss           0x0000000000800102        0x1 twi_master.o
 .bss           0x0000000000800103        0x0 lm73_functions.o
 .bss           0x0000000000800103        0x0 /usr/lib/gcc/avr/7.2.0/avr4/libgcc.a(_exit.o)
 .bss           0x0000000000800103        0x0 /usr/lib/gcc/avr/7.2.0/avr4/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800103       0x52 lab5_48.o
                0x0000000000800103                uart_tx_buf
                0x000000000080012b                UDR_read
                0x000000000080012d                uart_rx_buf
 COMMON         0x0000000000800155        0x5 twi_master.o
                0x0000000000800155                twi_state
                0x0000000000800156                twi_buf
                0x0000000000800158                twi_bus_addr
                0x0000000000800159                twi_msg_size
 COMMON         0x000000000080015a        0x4 lm73_functions.o
                0x000000000080015a                lm73_wr_buf
                0x000000000080015c                lm73_rd_buf
                0x000000000080015e                PROVIDE (__bss_end = .)
                0x0000000000000422                __data_load_start = LOADADDR (.data)
                0x0000000000000422                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080015e        0x0
                [!provide]                        PROVIDE (__noinit_start = .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end = .)
                0x000000000080015e                _end = .
                [!provide]                        PROVIDE (__heap_start = .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000     0x1818
 *(.stab)
 .stab          0x0000000000000000      0x714 lab5_48.o
 .stab          0x0000000000000714      0x630 uart_functions_m48.o
                                        0x828 (size before relaxing)
 .stab          0x0000000000000d44      0x6b4 twi_master.o
                                        0x8d0 (size before relaxing)
 .stab          0x00000000000013f8      0x300 lm73_functions.o
                                        0x4c8 (size before relaxing)
 .stab          0x00000000000016f8       0x6c /usr/lib/gcc/avr/7.2.0/avr4/libgcc.a(_exit.o)
                                         0x78 (size before relaxing)
 .stab          0x0000000000001764       0xb4 /usr/lib/gcc/avr/7.2.0/avr4/libgcc.a(_clear_bss.o)
                                         0xc0 (size before relaxing)

.stabstr        0x0000000000000000     0x121b
 *(.stabstr)
 .stabstr       0x0000000000000000     0x121b lab5_48.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x21
 *(.comment)
 .comment       0x0000000000000000       0x21 lab5_48.o
                                         0x22 (size before relaxing)
 .comment       0x0000000000000021       0x22 uart_functions_m48.o
 .comment       0x0000000000000021       0x22 twi_master.o
 .comment       0x0000000000000021       0x22 lm73_functions.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr4/crtatmega48.o

.avr.prop       0x0000000000000000       0x16
 .avr.prop      0x0000000000000000       0x16 twi_master.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x5f4
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x5f4 /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr4/crtatmega48.o

.debug_abbrev   0x0000000000000000      0x5a2
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x5a2 /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr4/crtatmega48.o

.debug_line     0x0000000000000000       0x1d
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1d /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr4/crtatmega48.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000      0x209
 *(.debug_str)
 .debug_str     0x0000000000000000      0x209 /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr4/crtatmega48.o

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)
OUTPUT(lab5_48.elf elf32-avr)
LOAD linker stubs
